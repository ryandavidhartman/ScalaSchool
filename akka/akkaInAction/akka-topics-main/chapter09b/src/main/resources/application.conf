

# These settings configure the database connection for ScalikeJDBC and the akka-persistence-jdbc plugin
jdbc-connection-settings {
  driver = "org.postgresql.Driver"

  # the following properties must be filled with the production values
  # they can be set using -D arguments, eg: -jdbc-connection-settings.user=the-production-user
  url = "jdbc:postgresql://127.0.0.1:5432/containers"  
  user = containers
  password = containers
}


akka-persistence-jdbc {
  shared-databases {
    default {
      # the slick profile must be compatible with the configured jdbc-connection-settings.driver
      # possible choices are:
      #  - slick.jdbc.PostgresProfile$
      #  - slick.jdbc.MySQLProfile$
      #  - slick.jdbc.H2Profile$
      #  - slick.jdbc.SQLServerProfile$
      #  - slick.jdbc.OracleProfile$
      profile = "slick.jdbc.PostgresProfile$"
      db {
        host = "localhost"
        url = "jdbc:postgresql://127.0.0.1:5432/containers"
        user = containers
        password = containers
        driver = "org.postgresql.Driver"
        numThreads = 5
        maxConnections = 5
        minConnections = 1
      }
    }
  }
}

jdbc-journal {
  use-shared-db = "default"
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  use-shared-db = "default"
}


akka {
  actor {
    provider = cluster

    serialization-bindings {
      "example.persistence.CborSerializable" = jackson-cbor
    }
  }

  remote {
    artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 25521 
    }
  }

  cluster {
    seed-nodes = [
      "akka://containers@127.0.0.1:25521"]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  # use JDBC plugin to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "jdbc-journal"
    auto-start-journals = ["jdbc-journal"]

    snapshot-store.plugin = "jdbc-snapshot-store"
    auto-start-snapshot-stores = ["jdbc-snapshot-store"]
  }

}

