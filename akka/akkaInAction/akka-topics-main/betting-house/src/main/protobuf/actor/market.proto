syntax = "proto3";

option java_package = "example.market.grpc";
option java_outer_classname = "MarketProto";

message FixtureData {
 	string id = 1;
 	string homeTeam = 2;
 	string awayTeam = 3;	
} 

message OddsData {
	double winHome = 1;
	double winAway = 2;
	double tie = 3;
}

message MarketData {
	string marketId = 1;
	FixtureData fixture = 2;
	OddsData odds = 3;
	enum Result {
		HOME_WINS = 0;
		HOME_LOSES = 1;
		TIE = 2;
	}
	Result result = 4;
	uint64 opensAt = 5;
}

message MarketId {
	string marketId = 1;
}

message Response {
	string message = 1;
}

message CancelMarket {
	string marketId = 1;
	string reason = 2;
}

service MarketService {

	rpc Open(MarketData) returns (Response) {}

	rpc Update(stream MarketData) returns (stream Response) {}

	rpc CloseMarket(MarketId) returns (Response) {} 
	//Adding the 'Market' suffix is necessary to avoid conflict with an already existing
	// close methods in Akka-gRPC that is generated by default
	// more details in https://doc.akka.io/docs/akka-grpc/current/client/details.html#client-lifecycle

	rpc Cancel(CancelMarket) returns (Response) {}

	rpc GetState(MarketId) returns (MarketData){}
}